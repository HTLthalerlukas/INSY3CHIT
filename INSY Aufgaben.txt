1) select * from depts;

2) select * from emps where dept_id = 10;

3) select ENAME, JOB, SAL from emps;

4) select * from emps where dept_id != 10;

5) select * from emps where COMM > SAL;

6) select * from emps where HIREDATE = '1981-12-03';

7) select ENAME, SAL from emps where SAL<1250 or SAL>1600;

8) select * from emps where JOB != 'PRESIDENT' or JOB != 'MANAGER';

9) select ENAME from emps where ENAME LIKE '__a%';

10) select id, ENAME, JOB from emps where COMM is not null;

11) select * from emps ORDER BY COMM;

12) select * from emps where JOB not in ('PRESIDENT', 'MANAGER') order by dept_id ASC, HIREDATE DESC;

13) select ENAME from emps where LENGTH(ENAME) = 6;

14) select CONCAT(ENAME, '-', JOB) AS 'Mitarbeiter und TÃ¤tigkeit' from emps where dept_id = 30;

15) select SAL, COMM from emps;
    select sal, IFNULL(COMM, 0) from emps;
    Der Unterschied ist, dass bei IFNULL(COMM, 0) statt "NULL", "0" bei COMM steht

16) select ENAME, SAL AS MONTHLY, SAL / 22 AS DAILY, (SAL / 22) / 8 AS HOURLY from emps;

17) select SUM(SAL) AS 'Gesamtbetrag' from emps;

18) select AVG(COMM + IFNULL(COMM, '250')) from emps;

19) select COUNT(SAL) AS anzahl_Gehalt, COUNT(COMM) AS anzahl_Provision from emps where dept_id = 30;

20) select COUNT(DISTINCT JOB) AS unique_Job from emps;

21) select DISTINCT parent_id from emps;
    select COUNT(DISTINCT parent_id) from emps;
    Es liefert Unterschiedliche Ergebnisse, da bei einem die einzigartigen ids ausgegeben und beim anderen die Anzahl der unterschiedlichen ids

22) select SUM(SAL), SUM(COMM), COUNT(SAL), COUNT(COMM), AVG(SAL), AVG(COMM) from emps where dept_id = 30;

23) select COUNT(DISTINCT JOB) AS uniqueJobs from emps where JOB not like 'MANAGER' AND JOB not like 'PRESIDENT';

